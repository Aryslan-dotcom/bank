plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.netflix.dgs.codegen" version "6.0.2"
}

group = 'Kaspi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

generateJava {
	typeMapping = [
	        "Float" : "java.lang.Float"
	]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.liquibase:liquibase-core:4.23.2'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	//graphql
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	implementation 'com.graphql-java-kickstart:graphql-java-tools:13.1.0'
	//netflix dgs (graphql-engine)
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:7.5.3"))
	implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
	implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-validation'

}

tasks.named('test') {
	useJUnitPlatform()
}
